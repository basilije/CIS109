<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Player.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAuQAAAAIB
        AAAAAQAAAAAAAAAAAAAAAKQAAAAAAwAACAACAAAAAAAFAAAAAAAAAPA/AwAAAAAABQAAAAAAAAAAAAgA
        AgAAAAAAAwABAAAACwD//wMAAAAAAAsA//8IAAIAAAAAAAMAZAAAAAsAAAAIAAoAAABmAHUAbABsAAAA
        CwD//wsAAAALAP//CwD//wsAAAAIAAIAAAAAAAgAAgAAAAAACAACAAAAAAAIAAIAAAAAAAsAAACIOwAA
        LAoAAAs=
</value>
  </data>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="openFileDialog1.Filter" xml:space="preserve">
    <value>All Media Files|*.wav;*.aac;*.wma;*.wmv;*.avi;*.mpg;*.mpeg;*.m1v;*.mp2;*.mp3;*.mpa;*.mpe;*.m3u;*.mp4;*.mov;*.3g2;*.3gp2;*.3gp;*.3gpp;*.m4a;*.cda;*.aif;*.aifc;*.aiff;*.mid;*.midi;*.rmi;*.mkv;*.flac;*.WAV;*.AAC;*.WMA;*.WMV;*.AVI;*.MPG;*.MPEG;*.M1V;*.MP2;*.MP3;*.MPA;*.MPE;*.M3U;*.MP4;*.MOV;*.3G2;*.3GP2;*.3GP;*.3GPP;*.M4A;*.CDA;*.AIF;*.AIFC;*.AIFF;*.MID;*.MIDI;*.RMI;*.MKV;*.FLAC</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>58</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAfAAAADwAAAA8AAAAPAAAAD/gf/B////8c=
</value>
  </data>
</root>